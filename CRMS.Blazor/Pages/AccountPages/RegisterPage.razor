@page "/identity/account/register"
@layout AuthenticationLayout
<div class="container">
    <div class="row">
        <div class="col-lg-4"></div>
        <div class="col-lg-4">
            <EditForm Enhance Model="User" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="card bg-dark" style="opacity:0.5; margin-top:50%; border-radius:10px; color:white; font-weight:bold">
                    <div class="card-header text-center fs-5 mb-2">Register</div>
                    <div class="container">
                        <div class="row">
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                            <div class="col-lg-4 col-md-4 col-sm-4 d-flex justify-content-center">
                                <img style="border-radius:20px" src="images/profile/logo-color.png" height="50" width="50" />
                            </div>
                            <div class="col-lg-4 col-md-4 col-sm-4"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Fullname</label>
                            <InputText @bind-Value="User.Fullname" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Email</label>
                            <InputText @bind-Value="User.Email" class="form-control"></InputText>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <input type="password" @bind="User.Password" class="form-control"></input>
                        </div>
                        <div class="form-group mt-3">
                            <label class="form-label">Password</label>
                            <input type="password" @bind="User.ConfirmPassword" class="form-control"></input>
                        </div>
                        <div class="form-group mt-3">
                            @if (ShowLoadingButton)
                            {
                                <ButtonLoadingSpinner></ButtonLoadingSpinner>
                            }
                            else
                            {
                                <button class="btn btn-outline-primary float-end" type="submit">Register</button>
                            }
                        </div>
                    </div>
                    <div class="card-footer">
                        <span class="text-center">
                            Already have a account? |
                            <a class="btn-Link" href="/identity/account/login">Sign In</a>
                        </span>
                        <ValidationSummary />
                    </div>
                </div>
            </EditForm>
        </div>
        <div class="col-lg-4">
        </div>
    </div>
</div>
@code {
    public bool ShowLoadingButton { get; set; } = false;
    Register User = new();
    [CascadingParameter] public Task<AuthenticationState> AuthenticationState { get; set; }
    protected async override Task OnInitializedAsync()
    {
        await CheckUserAuthentication();
    }

    async Task HandleRegistration()
    {
        ShowLoadingButton = true;
        var result = await accountService.CreateAsync(User);
        if (result.flag)
        {
            await DisplayDialog(result.Message, "Success");
            User = new();
        }
        else
        {
            await DisplayDialog(result.Message, "Alert!");
        }
        ShowLoadingButton = false;
    }

    private async Task DisplayDialog(string content, string Title)
    {
        await dialogService.AlertAsync(content, Title);
    }

    private async Task CheckUserAuthentication()
    {
        var user = (await AuthenticationState).User;
        bool isUserAuthenticated = user.Identity!.IsAuthenticated;
        if (isUserAuthenticated)
            NavManager.NavigateTo("/home/dashboard");
    }
}
