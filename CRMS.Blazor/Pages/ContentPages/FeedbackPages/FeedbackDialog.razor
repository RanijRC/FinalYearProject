<SfDialog Width="320px" IsModal="true" ShowCloseIcon="true" @bind-Visible="IsVisible">
    <DialogEvents OnOpen="OpenDialog"></DialogEvents>
    <DialogTemplates>
        <Header>Add Complaint Feedback</Header>
        <Content>
            <EditForm Model="Feedback" Enhance OnSubmit="Save">
                <div class="card border-success">
                    <div class="card-body">
                        <div class="form-group">
                            <label class="form-label">Complaint Id</label>
                            <input @bind="@Feedback.ComplaintId" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Date</label>
                            <input @bind="@Feedback.Date" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Complaint Feedback</label>
                            <input @bind="@Feedback.ComplaintFeedback" class="form-control" disabled />
                        </div>
                        <div class="form-group">
                            <label class="form-label">Recommendation</label>
                            <input @bind="@Feedback.FeedbackRecomendation" class="form-control" disabled />
                        </div>
                    </div>
                </div>
            </EditForm>
        </Content>
    </DialogTemplates>

    <DialogButtons>
        <DialogButton Content="SAVE" Type="ButtonType.Submit" IsPrimary="true" OnClick="Save" />
    </DialogButtons>
</SfDialog>

@code{
    public string Title {get;set;} ="Add";
    [Parameter] public Feedback Feedback {get;set;} = new();
    [Parameter] public EventCallback<Feedback> HandleSaveOperationEvent {get;set;}

    private bool IsVisible {get;set;} = false;
    private async void Save() => await HandleSaveOperationEvent.InvokeAsync(Feedback);

    public void OpenDialog()
    {
        IsVisible = true;
        StateHasChanged();
    }

    public void CloseDialog()
    {
        IsVisible = false;
        StateHasChanged();
    }

    public void ChangeTitle(string title) => Title = title;

}